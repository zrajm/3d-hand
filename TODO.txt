#+STARTUP: overview hidestars -*- org -*-

visual-line-mode
adaptive-wrap-prefix-mode

* [0/9] Soon
** TODO Using the finger controls shouldn't rotate model
   Currently the model rotates when adjusting controls. I assume this has got something to do with HTML event bubbling or somesuch?
** TODO Allow any rotation of hand
   Currently I can't move the hand to any angle. For example the Swedish X-hand's position when fingerspelling can't be achieved.
** TODO Thumb
   The range of motion should reflect thumb's actual range.
** TODO Fill in palm
** TODO Better wrist
** TODO Improve fingertip shape
   Should maybe include some kind of fingernails? Or at least not approximate finger tips as half a sphere, but have something hinting at the shape of an actual fingertip.
** TODO Load/save hand configurations
** TODO Remove hidden surfaces                                     :OPTIMIZE:
   For example the finger segments are created using spheres and cylinders, creating a lot of unnecessary surfaces that are hidden inside each finger segment. The end bits should be half spheres, attached to cylinders open cylinders (that is the cylinders should not have lids at either ends).

   The Three.js `SphereGeometry` class has an options `phiStart` and `phiLength` which may be used to draw half spheres. Use this?

   + [[https://threejs.org/docs/#api/en/geometries/SphereGeometry][Three.js Manual: SphereGeometry]]
   + [[https://threejs.org/docs/#api/en/geometries/CylinderGeometry][Three.js Manual: CylinderGeometry]] (See `openEnded` property.)
** TODO Interface for controlling handshape
   The controlling interface should allow precise individual movement, but also simple transcription-based movement.

   Current pain points: Supporting 'stacked' (that is K-like handshapes).

   All hand methods can be chained.

   hand.fist().extend('im')          = u
   hand.fist().extend('im').spread() = v

   hand.fist().extend(1).flat(2, 80)

   hand = {
     0/thumb: { name: 'thumb', rotation: },
     1/index: { name: 'index', spread: <inherited from «hand»?> },
     2/middle: { name: 'middle', },
     3/ring: { name: 'ring', },
     4/pinky: { name: 'pinky', },
     group: {
       0/unselected: []
       1/selected:
       2/secondary:
     },
     stacked: false,
     spread: false,
   }

   The Basics
   ==========

   Finger properties are set to: 0–100, where 0 = not bent, and 100 = fully bent. There's a property for each of the three finger segments: 'base' (closest to the palm), 'mid' and 'tip'. The thumb also has a 'rotation' property, while the other fingers have a 'spread' property.

   This is slightly different from the anatomical view: The 'tip' segments correspond to the distal phalanx, but 'mid' and 'base' segments correspond to different bones in the thumbs and fingers. The 'base' segments maps onto to the thumb's metacarpal, but the other finger's proximal phalanges, while the 'mid' segments correspond to the thumb's medial phalanx, and the other finger's medial phalanges.

   Fingers are numbered: 0 = thumb, 1 = index, 2 = middle, 3 = ring, 4 = pinky.

   Segments are number from palm out: 0 = spread/rotation, 1 = base, 2 = mid, 3 = tip.

   hand.thumb  = hand[0]
     -- hand.thumb.rotation = hand[0][0]
     -- hand.thumb.base = hand[0][1]
     -- etc
   hand.index  = hand[1]
     -- hand.index.spread = hand[1][0]
     -- etc
   hand.middle = hand[2]
   hand.ring   = hand[3]
   hand.pinky  = hand[4]

   Higher level stuff
   ==================

   To simplify hand configuration, you may also use.

   hand.set('primary'|'secondary'|'unselected')

   finger.set(PERCENTAGE) = bend all joints
   finger.set(SEGMENT, PERCENTAGE) = bend that joint


   These basic functions can be called on <hand>, or <group> or <finger>.


   finger.extend() = finger.set(0)
   finger.bend()   = finger.set(50)
   finger.fist()   = finger.set(100)
   finger.flat()   = finger.set(0).set(1, 100) -- inner joint
   finger.hook()   = finger.set(100).set(1, 0) -- all except inner joint




   hand.set(PERCENTAGE)         = all joints (on all fingers)
   hand.set(FINGER, PERCENTAGE) = all joints on given finger
   hand.set(FINGER, SEGMENT, PERCENTAGE) = specified joint

   hand.stack()



   hand.group(0..2)
   0 = unselected
   1 = primary selected
   2 = secondary selected (rarely used)


   hand.bend('all')

   hand.selected(string)
   hand.secondary(string)
   hand.unselected(string)
   hand.spread


   radial = thumb side, ulnar = pinky side (Thiessen switched them around in his thesis)

Bending can be optionally qualified by a number to indicate amount (0-9 -- 0 = nothing, 9 = fully).

i = index
m = middle
r = ring
p = pinky
t = thumb

v = spread
k = stack
x = crossed

hand.bend('imrp', 50%)





* [0/2] Future
** TODO Prettier light & material
   Maybe take inspiration from this? [[https://discourse.threejs.org/t/white-toon-material/55762][White toon material]]

   Maybe make something inspired by the illustrations in Svenskt teckenspråkslexikon? (That is, something that looks drawn rather than photographic.) Or maybe something more toon like would look better, given that the hand isn't very natural looking?
** TODO Support transcription
* [6/6] Finished
** DONE Light source should be stationary
   CLOSED: [2024-07-04 Thu 04:48]
   When rotating the hand, the light source should remain stationary relative to the camera.
** DONE Add palm outline
   CLOSED: [2024-07-03 Wed 07:53]
** DONE Only redraw when scene has changed                         :OPTIMIZE:
   CLOSED: [2024-07-03 Wed 06:19]
   Currently CPU cycles are used even when object remains stationary. :(
** DONE Finger spreading
   CLOSED: [2024-06-29 Sat 17:54]
** DONE Improved colors
   CLOSED: [2024-06-29 Sat 09:24]
** DONE Serve all Javascript locally
   CLOSED: [2024-06-29 Sat 08:05]
   Don't use CDN.
* [eof]
